# Generated by Django 5.2.5 on 2025-10-09 18:10

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0004_profileupdaterequest'),
        ('leave', '0002_leavebalanceaudit_leaveblackoutdate_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FlexibleTimingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('max_duration_minutes', models.PositiveIntegerField(default=60, help_text='Maximum duration in minutes')),
                ('max_per_month', models.PositiveIntegerField(default=2, help_text='Maximum requests per month')),
                ('requires_approval', models.BooleanField(default=True)),
                ('advance_notice_hours', models.PositiveIntegerField(default=2, help_text='Minimum advance notice required in hours')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FlexibleTimingPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_manager_approval', models.BooleanField(default=True)),
                ('requires_hr_approval', models.BooleanField(default=False)),
                ('allow_emergency_requests', models.BooleanField(default=True)),
                ('emergency_auto_approve', models.BooleanField(default=False)),
                ('emergency_max_duration', models.PositiveIntegerField(default=30, help_text='Max emergency duration in minutes')),
                ('notify_manager', models.BooleanField(default=True)),
                ('notify_hr', models.BooleanField(default=False)),
                ('notify_team', models.BooleanField(default=False)),
                ('min_team_strength_required', models.PositiveIntegerField(blank=True, help_text='Minimum team members required to be present', null=True)),
                ('effective_from', models.DateField(default=datetime.date.today)),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicable_roles', models.ManyToManyField(blank=True, to='accounts.role')),
                ('blackout_dates', models.ManyToManyField(blank=True, to='leave.leaveblackoutdate')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FlexibleTimingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(choices=[('late_arrival', 'Late Arrival'), ('early_departure', 'Early Departure'), ('extended_break', 'Extended Break'), ('custom', 'Custom Timing')], default='late_arrival', max_length=20)),
                ('requested_date', models.DateField()),
                ('duration_minutes', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('start_time', models.TimeField(blank=True, help_text='For custom timing requests', null=True)),
                ('end_time', models.TimeField(blank=True, help_text='For custom timing requests', null=True)),
                ('reason', models.TextField()),
                ('is_emergency', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('used', 'Used'), ('expired', 'Expired')], default='pending', max_length=15)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('admin_comments', models.TextField(blank=True, null=True)),
                ('used_at', models.DateTimeField(blank=True, help_text='When the flexible timing was actually used', null=True)),
                ('actual_duration_minutes', models.PositiveIntegerField(blank=True, help_text='Actual duration used', null=True)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_timing_requests', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flexible_timing_requests', to=settings.AUTH_USER_MODEL)),
                ('timing_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leave.flexibletimingtype')),
            ],
            options={
                'ordering': ['-applied_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='leave_flexi_user_id_15d9e3_idx'), models.Index(fields=['requested_date', 'status'], name='leave_flexi_request_2b80b6_idx'), models.Index(fields=['timing_type', 'status'], name='leave_flexi_timing__6c63e0_idx'), models.Index(fields=['applied_at'], name='leave_flexi_applied_71d733_idx')],
            },
        ),
        migrations.CreateModel(
            name='FlexibleTimingBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('month', models.PositiveIntegerField()),
                ('total_allowed', models.PositiveIntegerField(default=0)),
                ('used_count', models.PositiveIntegerField(default=0)),
                ('pending_count', models.PositiveIntegerField(default=0)),
                ('total_duration_used', models.PositiveIntegerField(default=0)),
                ('total_duration_pending', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flexible_timing_balances', to=settings.AUTH_USER_MODEL)),
                ('timing_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leave.flexibletimingtype')),
            ],
            options={
                'ordering': ['user__username', 'timing_type__name', '-year', '-month'],
                'indexes': [models.Index(fields=['user', 'year', 'month'], name='leave_flexi_user_id_ba0ab4_idx'), models.Index(fields=['timing_type', 'year', 'month'], name='leave_flexi_timing__2fb933_idx')],
                'unique_together': {('user', 'timing_type', 'year', 'month')},
            },
        ),
    ]
