# Generated by Django 5.2.5 on 2025-10-09 12:24

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0004_profileupdaterequest'),
        ('leave', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LeaveBalanceAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('annual_reset', 'Annual Reset'), ('manual_adjustment', 'Manual Adjustment'), ('accrual', 'Monthly/Weekly Accrual'), ('usage', 'Leave Usage'), ('carry_forward', 'Carry Forward'), ('policy_change', 'Policy Change'), ('correction', 'Balance Correction')], max_length=20)),
                ('old_balance', models.DecimalField(decimal_places=2, max_digits=7)),
                ('new_balance', models.DecimalField(decimal_places=2, max_digits=7)),
                ('change_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('reason', models.TextField()),
                ('reference_id', models.CharField(blank=True, help_text='Reference to related object (e.g., leave application ID)', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_trail', to='leave.leavebalance')),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['balance', 'action'], name='leave_leave_balance_d60bc6_idx'), models.Index(fields=['created_at'], name='leave_leave_created_39680e_idx')],
            },
        ),
        migrations.CreateModel(
            name='LeaveBlackoutDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reason', models.TextField(help_text='Reason for blackout period')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('applicable_leave_types', models.ManyToManyField(blank=True, to='leave.leavetype')),
                ('applicable_roles', models.ManyToManyField(blank=True, to='accounts.role')),
            ],
            options={
                'ordering': ['start_date'],
                'indexes': [models.Index(fields=['start_date', 'end_date'], name='leave_leave_start_d_938802_idx')],
            },
        ),
        migrations.CreateModel(
            name='OverallLeavePolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('max_total_per_week', models.PositiveIntegerField(blank=True, help_text='Maximum total leaves per week', null=True)),
                ('max_total_per_month', models.PositiveIntegerField(blank=True, help_text='Maximum total leaves per month', null=True)),
                ('max_total_per_year', models.PositiveIntegerField(blank=True, help_text='Maximum total leaves per year', null=True)),
                ('max_total_consecutive_days', models.PositiveIntegerField(blank=True, help_text='Maximum consecutive days across all leave types', null=True)),
                ('min_gap_between_leaves', models.PositiveIntegerField(default=0, help_text='Minimum gap required between leave applications (in days)')),
                ('max_advance_booking_days', models.PositiveIntegerField(blank=True, help_text='Maximum days in advance for booking leave', null=True)),
                ('min_advance_booking_days', models.PositiveIntegerField(default=0, help_text='Minimum days in advance for booking leave')),
                ('max_simultaneous_leaves_in_team', models.PositiveIntegerField(blank=True, help_text='Maximum people on leave simultaneously in a team', null=True)),
                ('max_simultaneous_leaves_in_department', models.PositiveIntegerField(blank=True, help_text='Maximum people on leave simultaneously in a department', null=True)),
                ('allow_emergency_leave', models.BooleanField(default=True)),
                ('emergency_leave_max_days', models.PositiveIntegerField(default=3, help_text='Maximum emergency leave days without prior approval')),
                ('block_leave_before_weekend', models.BooleanField(default=False)),
                ('block_leave_after_weekend', models.BooleanField(default=False)),
                ('block_leave_before_holiday', models.BooleanField(default=False)),
                ('block_leave_after_holiday', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('effective_from', models.DateField(default=datetime.date.today)),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicable_roles', models.ManyToManyField(blank=True, to='accounts.role')),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['is_active', 'effective_from'], name='leave_overa_is_acti_0cc415_idx')],
            },
        ),
    ]
